/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package document.distance.calculator;

import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionListener;
import javax.swing.plaf.basic.BasicListUI;

/**
 *
 * @author Rustem
 */
public class MyFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyFrame
     */
    public MyFrame() {
        initComponents();
    }
    /*---------------------------    Main methods      ---------------------------------------*/
    void addActionListenerToSearchButton(ActionListener listener) {
        this.searchButton.addActionListener(listener);
    }
    void fillFileNameList(String[] fileNames) {
        resultList.setVisible(true);
        resultList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return fileNames.length; }
            public String getElementAt(int i) { return fileNames[i]; }
        });
    }
    void fillDistanceList(String[] distances){
        distanceList.setVisible(true);
        distanceList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return distances.length; }
            public String getElementAt(int i) { return distances[i]; }
        });
    }
    void addActionListenerToListItemCliked(ListSelectionListener listener){
        this.resultList.addListSelectionListener(listener);
    }
    String getSelectedItemFromList() {
        return this.resultList.getSelectedValue();
    }
    String getSearchingDocLabelTxt(){
        return this.searchingDocLabel.getText();
    }
    String getSourceDocsLabelTxt(){
        return this.sourceDocsLabel.getText();
    }
    /*---------------------------        End      ---------------------------------------*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourceDocsLabel = new javax.swing.JTextField();
        searchingDocLabel = new javax.swing.JTextField();
        searchingDocButton = new javax.swing.JButton();
        SourceDocsButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        distanceList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sourceDocsLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceDocsLabelActionPerformed(evt);
            }
        });

        searchingDocLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchingDocLabelActionPerformed(evt);
            }
        });

        searchingDocButton.setText("Searching");
        searchingDocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchingDocButtonActionPerformed(evt);
            }
        });

        SourceDocsButton.setText("Source Docs");
        SourceDocsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SourceDocsButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        resultList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        resultList.setVisible(false);
        jScrollPane1.setViewportView(resultList);

        distanceList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        distanceList.setVisible(false);
        jScrollPane2.setViewportView(distanceList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchingDocButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SourceDocsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sourceDocsLabel)
                            .addComponent(searchingDocLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchingDocLabel)
                    .addComponent(searchingDocButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sourceDocsLabel)
                    .addComponent(SourceDocsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchingDocLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchingDocLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchingDocLabelActionPerformed

    private void searchingDocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchingDocButtonActionPerformed
        // TODO add your handling code here:
         JFileChooser fileChooser = new JFileChooser();
          fileChooser.setDialogTitle("Choose a file to read words of searching doc");
          int status = fileChooser.showOpenDialog(null);
          if(status == JFileChooser.APPROVE_OPTION)
          {
              this.searchingDocLabel.setText(fileChooser.getSelectedFile().getAbsolutePath());
          }
    }//GEN-LAST:event_searchingDocButtonActionPerformed

    private void SourceDocsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SourceDocsButtonActionPerformed
        // TODO add your handling code here:
         JFileChooser fileChooser = new JFileChooser();
          fileChooser.setDialogTitle("Choose a folder that contains base files to search the doc");
          int status = fileChooser.showOpenDialog(null);
          if(status == JFileChooser.APPROVE_OPTION)
          {
              String filePath = fileChooser.getSelectedFile().getAbsolutePath();
              this.sourceDocsLabel.setText(filePath.substring(0, filePath.lastIndexOf("\\")));
          }
    }//GEN-LAST:event_SourceDocsButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void sourceDocsLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceDocsLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceDocsLabelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SourceDocsButton;
    private javax.swing.JList<String> distanceList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> resultList;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchingDocButton;
    private javax.swing.JTextField searchingDocLabel;
    private javax.swing.JTextField sourceDocsLabel;
    // End of variables declaration//GEN-END:variables
}
